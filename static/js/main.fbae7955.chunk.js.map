{"version":3,"sources":["components/customComponents/clock/index.tsx","components/customComponents/modal/index.tsx","components/attendance/timeInModal/index.tsx","components/attendance/timeOutModal/index.tsx","components/attendance/index.tsx","routes/index.ts","components/admin/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["require","Clock","useState","Date","time","setTime","useEffect","setInterval","className","toLocaleTimeString","Modal","children","id","title","role","aria-labelledby","aria-hidden","type","data-dismiss","aria-label","TimeInModal","TimeOutModal","Attendance","placeholder","data-toggle","data-target","routes","component","path","App","routeComponents","map","index","key","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oRACAA,EAAQ,IAER,IAoBeC,EApBD,WAAO,IAAD,EACMC,mBAAS,IAAIC,MADnB,mBACXC,EADW,KACLC,EADK,KASlB,OANAC,qBAAU,WACRC,aAAY,WACVF,EAAQ,IAAIF,QACX,OACF,IAGD,yBAAKK,UAAU,aACb,yBAAKA,UAAU,UACb,uBAAGA,UAAU,sCACVJ,EAAKK,yBCqBDC,EA7BU,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MACxC,OACE,yBACEL,UAAU,aACVI,GAAIA,EACJE,KAAK,SACLC,kBAAgB,oBAChBC,cAAY,QAEZ,yBAAKR,UAAU,sCACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,eAAeK,GAC7B,4BACEI,KAAK,SACLT,UAAU,QACVU,eAAa,QACbC,aAAW,SAEX,0BAAMH,cAAY,QAAlB,UAGJ,yBAAKR,UAAU,cAAcG,OCLxBS,EAjBgB,SAAC,GAAmB,IAAjBR,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACpC,OACE,kBAAC,EAAD,CAAOD,GAAIA,EAAIC,MAAOA,GACpB,+CACA,2CACe,yCAEf,wCACY,oDAEZ,wCACY,+BAAO,IAAIV,MAAOM,yBCMrBY,EAjBiB,SAAC,GAAmB,IAAjBT,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACrC,OACE,kBAAC,EAAD,CAAOD,GAAIA,EAAIC,MAAOA,GACpB,gDACA,2CACe,yCAEf,wCACY,oDAEZ,wCACY,+BAAO,IAAIV,MAAOM,yBCqCrBa,EAnDI,WACjB,OACE,yBAAKd,UAAU,qEACb,yBAAKA,UAAU,uEACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,iHACb,uBAAGA,UAAU,aAAb,cACA,yBAAKA,UAAU,6CACb,yBAAKA,UAAU,6BACb,uBAAGA,UAAU,uCACb,2BACES,KAAK,OACLT,UAAU,8BACVe,YAAY,cAGhB,yBAAKf,UAAU,6BACb,uBAAGA,UAAU,sCACb,2BACES,KAAK,WACLT,UAAU,8BACVe,YAAY,cAGhB,yBAAKf,UAAU,uCACb,4BACEA,UAAU,6EACVgB,cAAY,QACZC,cAAY,iBAEZ,yCACA,uBAAGjB,UAAU,kBAEf,kBAAC,EAAD,CAAaI,GAAG,eAAeC,MAAM,YACrC,4BACEL,UAAU,6EACVgB,cAAY,QACZC,cAAY,kBAEZ,0CACA,uBAAGjB,UAAU,kBAEf,kBAAC,EAAD,CAAcI,GAAG,gBAAgBC,MAAM,kBC7BpCa,EAfmB,CAChC,CACEC,UAAWL,EACXM,KAAM,eAER,CACED,UAAWL,EACXM,KAAM,YAER,CACED,UCZU,WACZ,OACE,6BACE,mDDUFC,KAAM,M,eEGKC,MAbf,WACE,IAAMC,EAAkBJ,EAAOK,KAAI,WAAsBC,GAAtB,IAAGJ,EAAH,EAAGA,KAAMD,EAAT,EAASA,UAAT,OACjC,kBAAC,IAAD,CAAOC,KAAMA,EAAMD,UAAWA,EAAWM,IAAKD,OAEhD,OACE,yBAAKxB,UAAU,iCACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KAASsB,MCAGI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.fbae7955.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nrequire(\"./style.css\");\r\n\r\nconst Clock = () => {\r\n  const [time, setTime] = useState(new Date());\r\n\r\n  useEffect(() => {\r\n    setInterval(() => {\r\n      setTime(new Date());\r\n    }, 1000);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"circle\">\r\n        <p className=\"color-orange display-4 text-center\">\r\n          {time.toLocaleTimeString()}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Clock;\r\n","import React, { FC } from \"react\";\r\n\r\ninterface Props {\r\n  children: any;\r\n  id: string;\r\n  title: string;\r\n}\r\n\r\nconst Modal: FC<Props> = ({ children, id, title }): any => {\r\n  return (\r\n    <div\r\n      className=\"modal fade\"\r\n      id={id}\r\n      role=\"dialog\"\r\n      aria-labelledby=\"exampleModalLabel\"\r\n      aria-hidden=\"true\"\r\n    >\r\n      <div className=\"modal-dialog modal-dialog-centered\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\">{title}</h5>\r\n            <button\r\n              type=\"button\"\r\n              className=\"close\"\r\n              data-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n            >\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div className=\"modal-body\">{children}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { FC } from \"react\";\r\nimport Modal from \"../../customComponents/modal\";\r\n\r\ninterface Props {\r\n  id: string;\r\n  title: string;\r\n}\r\n\r\nconst TimeInModal: FC<Props> = ({ id, title }) => {\r\n  return (\r\n    <Modal id={id} title={title}>\r\n      <p>Time in Success!</p>\r\n      <p>\r\n        Employee ID: <span>216417</span>\r\n      </p>\r\n      <p>\r\n        Employee: <span>Jaypee Santos Tan</span>\r\n      </p>\r\n      <p>\r\n        Time Out: <span>{new Date().toLocaleTimeString()}</span>\r\n      </p>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default TimeInModal;\r\n","import React, { FC } from \"react\";\r\nimport Modal from \"../../customComponents/modal\";\r\n\r\ninterface Props {\r\n  id: string;\r\n  title: string;\r\n}\r\n\r\nconst TimeOutModal: FC<Props> = ({ id, title }) => {\r\n  return (\r\n    <Modal id={id} title={title}>\r\n      <p>Time out Success!</p>\r\n      <p>\r\n        Employee ID: <span>216417</span>\r\n      </p>\r\n      <p>\r\n        Employee: <span>Jaypee Santos Tan</span>\r\n      </p>\r\n      <p>\r\n        Time Out: <span>{new Date().toLocaleTimeString()}</span>\r\n      </p>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default TimeOutModal;\r\n","import React from \"react\";\r\nimport Clock from \"../customComponents/clock\";\r\nimport TimeInModal from \"./timeInModal\";\r\nimport TimeOutModal from \"./timeOutModal\";\r\n\r\nconst Attendance = () => {\r\n  return (\r\n    <div className=\"h-100 w-100 row align-items-center justify-content-center m-0 p-0\">\r\n      <div className=\"container col-xl-6 col-lg-6 col-md-12 col-md-12 col-sm-12 col-xs-12\">\r\n        <Clock />\r\n      </div>\r\n      <div className=\"container d-flex justify-content-center flex-column col-xl-6 col-lg-6 col-md-12 col-md-12 col-sm-12 col-xs-12\">\r\n        <p className=\"display-3\">Attendance</p>\r\n        <div className=\"d-flex flex-column justify-content-around\">\r\n          <div className=\"d-flex align-items-center\">\r\n            <i className=\"fas fa-user position-absolute ml-3\" />\r\n            <input\r\n              type=\"text\"\r\n              className=\"input-text my-3 text-center\"\r\n              placeholder=\"Username\"\r\n            />\r\n          </div>\r\n          <div className=\"d-flex align-items-center\">\r\n            <i className=\"fas fa-key position-absolute ml-3\" />\r\n            <input\r\n              type=\"password\"\r\n              className=\"input-text my-3 text-center\"\r\n              placeholder=\"Password\"\r\n            />\r\n          </div>\r\n          <div className=\"d-flex justify-content-around w-100\">\r\n            <button\r\n              className=\"w-50 mx-2 btn btn-primary d-flex justify-content-around align-items-center\"\r\n              data-toggle=\"modal\"\r\n              data-target=\"#timeIn-modal\"\r\n            >\r\n              <span>Time in</span>\r\n              <i className=\"fas fa-clock\" />\r\n            </button>\r\n            <TimeInModal id=\"timeIn-modal\" title=\"Time in\" />\r\n            <button\r\n              className=\"w-50 mx-2 btn btn-warning d-flex justify-content-around align-items-center\"\r\n              data-toggle=\"modal\"\r\n              data-target=\"#timeOut-modal\"\r\n            >\r\n              <span>Time out</span>\r\n              <i className=\"far fa-clock\" />\r\n            </button>\r\n            <TimeOutModal id=\"timeOut-modal\" title=\"Time out\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Attendance;\r\n","import { RoutesData } from \"../interfaces/routes\";\r\nimport Attendance from \"../components/attendance\";\r\nimport Admin from \"../components/admin\";\r\n\r\nconst routes: Array<RoutesData> = [\r\n  {\r\n    component: Attendance,\r\n    path: \"/attendance\",\r\n  },\r\n  {\r\n    component: Attendance,\r\n    path: \"/oclock/\",\r\n  },\r\n  {\r\n    component: Admin,\r\n    path: \"/\",\r\n  },\r\n];\r\n\r\nexport default routes;\r\n","import React from \"react\";\r\n\r\nconst Admin = () => {\r\n  return (\r\n    <div>\r\n      <p>This is admin page</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport routes from \"./routes\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n  const routeComponents = routes.map(({ path, component }, index) => (\n    <Route path={path} component={component} key={index} />\n  ));\n  return (\n    <div className=\"position-absolute h-100 w-100\">\n      <Router>\n        <Switch>{routeComponents}</Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}